



httpbis                                                           K. Oku
Internet-Draft                                                    Fastly
Intended status: Standards Track                            29 July 2024
Expires: 30 January 2025


                       Streaming Requests on HTTP
             draft-kazuho-httpbis-streaming-requests-latest

Abstract

   This document specifies the "Request-Streaming" HTTP request header
   field, which instructs HTTP intermediaries to begin forwarding the
   request and the corresponding response before the HTTP message body
   is received completely.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the HTTP Working Group
   mailing list (ietf-http-wg@w3.org), which is archived at
   https://lists.w3.org/Archives/Public/ietf-http-wg/.

   Source for this draft and an issue tracker can be found at
   https://github.com/kazuho/draft-kazuho-httpbis-streaming-requests.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 30 January 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  The Request-Streaming Header Field
   4.  Security Considerations
     4.1.  Applying Concurrency Limits
     4.2.  Rejecting Streaming Requests
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   HTTP [HTTP] is a request-response protocol that allows servers to
   start transmitting a response before the entire HTTP request has been
   received.  Some applications, such as Chunked Oblivious HTTP Messages
   [CHUNKED-OHTTP], exploit this capability to turn a single HTTP
   request-response pair into a medium for bi-directional communication,
   on which multiple application-defined request-response message pairs
   are exchanged.

   However, this approach is fragile when HTTP intermediaries are
   involved.  HTTP intermediaries are not only allowed but are
   frequently deployed to buffer complete HTTP requests before
   forwarding them to the backend server (Section 7.6 of [HTTP]).

   Should such a buffering HTTP intermediary be present between the
   client and the server, the application in question fails to function
   as intended.  Upon sending the HTTP header section and the initial
   application message, the client awaits a response while keeping the
   HTTP request open for subsequent application messages.  Concurrently,
   the intermediary delays forwarding until the HTTP request is fully
   received.  This misalignment leads to a deadlock that prevents the
   exchange of application-defined messages, effectively disrupting the
   intended bi-directional communication.

   To prevent such deadlocks, this document specifies the "Request-
   Streaming" HTTP request header field, that instructs HTTP
   intermediaries to begin forwarding the HTTP request downstream before
   receiving the complete request.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The term Boolean is imported from [STRUCTURED-FIELDS].

3.  The Request-Streaming Header Field

   The Request-Streaming request header field expresses the client's
   intent for HTTP intermediaries to start forwarding the request to
   downstream servers before the entire request is received.

   This header field has just one valid value of type Boolean: "?1".

   Request-Streaming = ?1

   Upon receiving a header section that includes the Request-Streaming
   header field, HTTP intermediaries SHOULD NOT buffer the entire
   request before forwarding it.  Instead, intermediaries SHOULD
   establish an HTTP channel to downstream servers, transmit the header
   section, and continuously forward the bytes of the request body as
   they arrive.

   Similarly, intermediaries SHOULD forward the bytes of the response
   body to the clients as they are received.

4.  Security Considerations

4.1.  Applying Concurrency Limits

   To conserve resources required to handle HTTP requests or
   connections, it is common for intermediaries to impose limits on the
   maximum number of concurrent HTTP requests that they forward, while
   buffering requests that exceed this limit.

   Such intermediaries may apply a more restrictive concurrency limit to
   streaming requests to ensure that there remains capacity to process
   non-streaming requests, even when the maximum number of long-lived
   streaming requests is reached.  This approach helps balance the
   processing of different types of requests and maintains service
   availability across all request types.

   When rejecting streaming requests due to reaching the concurrency
   limit, intermediaries SHOULD respond with a 503 Service Unavailable
   error, accompanied with a connection_limit_reached Proxy-Status
   response header field (Section 2.3.12 of [PROXY-STATUS]).

4.2.  Rejecting Streaming Requests

   Some intermediaries buffer the entire HTTP request or response body
   to inspect the payload as a whole.  If these intermediaries cannot
   tolerate streaming requests as indicated by the Request-Streaming
   request header field, they SHOULD reject these streaming requests
   with a 403 Forbidden response (Section 15.5.4 of [HTTP]).  Rejecting
   these requests explicitly is preferable to buffering the HTTP body in
   hopes that it will eventually be closed by the sender.

5.  IANA Considerations

   TBD

6.  References

6.1.  Normative References

   [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "HTTP Semantics", STD 97, RFC 9110,
              DOI 10.17487/RFC9110, June 2022,
              <https://www.rfc-editor.org/rfc/rfc9110>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [STRUCTURED-FIELDS]
              Nottingham, M. and P. Kamp, "Structured Field Values for
              HTTP", RFC 8941, DOI 10.17487/RFC8941, February 2021,
              <https://www.rfc-editor.org/rfc/rfc8941>.

6.2.  Informative References

   [CHUNKED-OHTTP]
              Pauly, T. and M. Thomson, "Chunked Oblivious HTTP
              Messages", Work in Progress, Internet-Draft, draft-ietf-
              ohai-chunked-ohttp-01, 8 July 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ohai-
              chunked-ohttp-01>.

   [PROXY-STATUS]
              Nottingham, M. and P. Sikora, "The Proxy-Status HTTP
              Response Header Field", RFC 9209, DOI 10.17487/RFC9209,
              June 2022, <https://www.rfc-editor.org/rfc/rfc9209>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Kazuho Oku
   Fastly
   Email: kazuhooku@gmail.com
